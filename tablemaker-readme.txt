 *--------------------------------------------------------------------------------------------------*
 * tablemaker.js : 書き込み欄で文字列を範囲選択し右クリックメニューでコマンド実行して表に変換する   *
 *  Author: ◆IJa6whaByU                                                                            *
 *    Date: 2013/01/31                                                                              *
 * Version: 1.00 (this is βversion)                                                                *
 * License: JaneView License                                                                        *
 *--------------------------------------------------------------------------------------------------*

※ 注意

　・スレッドのテンプレに使用するときは変換用設定の「ユニコード空白文字を使用する」を
　　使用するのはやめましょう
　　高確率で次のテンプレを立てるときに第三者がユニコード文字の使用に気づかずそのままコピペし
　　テンプレの表がズレます
　・JaneViewではソースコード兼デバッグ用途のあるtablemaker_src.jsを実行する場合。文字コードを
　　「Shift_JIS」に変換しないと動かないので通常はコンパイル済みのtablemaker.jsを使用して下さい

―┤バグの報告手順├――――――――――――――――――――――――――――――――――――――――

  ○周知の不具合
    スタイル「半角文字の罫線」で非ユニコード時にセルの結合をすると罫線がズレますが仕様とさせて下さい

  ○変換した表がズレた場合、まず以下の項目を確認すること
    ・使用しているフォントが「ＭＳ Ｐゴシック」であり、尚且つサイズが「16」であること
      （JaneViewの場合はサイズ「中」）
    ・ユニコード文字を使用している場合、書き込んだ板がユニコード文字に対応していること
      （SETTING.TXTが「BBS_UNICODE=pass」だとユニコード文字を使用可能）
    ・スタイル「ユーザー指定罫線」の場合は設定次第ではズレるのでバグではない
      コツとしては全ての罫線種類のdot数を同じにするとズレない
      各罫線要素は１文字じゃなくても大丈夫なので数値参照文字のユニコード指定（&#12354;みたいな）
      で幅をあわせるなどすると良い

  ○報告する際に必要なデータを用意する
    ・必要なのはデバッグモードでのトレースログ、変換前の文字列、変換後の文字列の３つ
    ・V2Cなら「CTRL+Z」２回押して変換前の変換用文字列をテキストファイル等に保存しとく
    ・同封の「tablemaker_src.js」を一時的に「tablemaker.js」にリネームする
      （元のtablemaker.jsを上書きしないで一時的に別の名前にしとく）
      同ファイルをテキストエディターで開き17行目の文頭の「//」を消して保存する
      例…
        //MODE = main,DEBUG=true;     // ユーザー用のデバッグモード。
        ↓変更後↓
        MODE = main,DEBUG=true;     // ユーザー用のデバッグモード。
    ・反映させるために一度２ちゃんねるブラウザを再起動する
    ・V2Cならメニューの「設定」→「スクリプトコンソール」を開いておく
      （JaneViewならトレース欄が既に表示されてるのでこの手順は不要。あるいは上手く表示されない場合
       もあるので一時的にV2Cで実行することも考慮に入れる）
    ・その状態で再度同じ変換を行うとスクリプトコンソールウィンドウに文字がずらーっと表示されるので
      右クリックでコピーしてテキストファイル等に保存しとく
    ・保存したテキストファイルの行数がスレッドに貼り付けられる程度ならそのままコピペする
      だがおそらくたくさん行数があるのでaxfc等のアップローダーにテキストファイルをUPしてそのURLを
      添えてV2C掲示板（ http://yy61.60.kg/v2cj/ ）のスクリプトスレあるいは
      Jane総合掲示板 ( http://mattari.plusvip.jp/jane2ch/ ) の
      JaneView ScriptとResActionを活用するスレ（こっちはあんま覗かないかも）に報告してくれると
      原因を特定する上で非常に助かります

―┤実行方法├―――――――――――――――――――――――――――――――――――――――――――

  ○同封物／生成物
    ・tablemaker-readme.txt
        今読んでいるこのファイル
    ・tablemaker.js
        スクリプト本体。JaneViewの場合はこれだけあればいい。V2Cの外部コマンドのみの
        使用の場合もこれだけあればいい
    ・tablemaker_menu.js
        V2Cのmenu.jsで書込み欄の右クリックメニューを拡張する場合に必要
    ・system/menu.js
        V2Cのmenu.jsで書込み欄の右クリックメニューを拡張する場合に必要
        systemフォルダに置く
    ・tablemaker_src.js
        可読可能なtablemaker.js。上記のtablemaker.jsではデバッグ出力が削除されているので
        バグ等で処理を追いたい場合はこちらを使用する
    ・tablemaker_extern.js
        開発用。tablemaker_src.jsをClosure Compiler Appでコンパイルして
        tablemaker.jsを作成するときに--externsに指定するのに必要
    ・scdata/tablemaker.settings
        V2Cのmenu.jsを使用した場合に表の変換設定を記憶する際に自動生成されるファイル
        初期化したい場合はこれを消せばいい
    ・tablemaker.ini
        JaneViewの表の変換設定を記憶する際に自動生成されるファイル
　　※tablemaker.settingsとtablemaker.iniは同じ内容物だが、文字コードが違うので
      もし移行させる場合には文字コードをJaneViewならShift_JIS、V2CならUTF-8にする
      また拡張子.settings ←→ .ini で便宜変更する。

  ○JaneViewの場合
    ・スクリプトの導入…
      JaneViewのインストールフォルダの「Script」フォルダに同封の「tablemaker.js」をコピーする
      （"Script"フォルダが無い場合は自分で作る）
      同フォルダの「ScriptIndex.txt」を開き、「tablemaker.js」を追加する
      （追加行はどこでもいい。ScriptIndex.txtがない場合は自分で作る）
      既にJaneViewを起動している場合は再起動する

    ・スクリプトの実行…
      書き込みウィンドウを開くと、ウィンドウ上部にメニューバーが表示され「テーブルメイカ―」という
      項目が追加されているのでそこから実行する
      実行する前に表作成の為の文字を本文欄に記入する必要がある（書式は下記参照）
      表作成用の文字を書いたらマウスで範囲選択し「テーブルメイカ―」メニューから変換を実行する
      （範囲選択せずにそのまま実行すると本文全体が対象になるが関係ない部分はそのまま）

  ○V2Cの場合
    ・スクリプトの導入…
      V2Cのログ・設定保存用フォルダのスクリプトフォルダ（以下、スクリプトフォルダ）に、
      「tablemaker.js」をコピーする
        フォルダの場所はV2Cインストール直後なら、
        Windows Vista以降は「C:\Users\ユーザー名\V2C\script」
        Windows XP以前は「C:\Documents and Settings\ユーザー名\V2C\script」
        Macは「Library/Application Support/V2C/script」
        Linuxは「/home/ユーザー名/v2c/script」
      V2Cメニューの「設定」→「外部コマンド」→「一般」→「選択テキスト」に
      「tablemaker.js」用のコマンドを追加する。（コマンドの書式は下記参照）
      
    ・スクリプトの実行
      書き込みウィンドウの本文欄に表作成用の文字を書いたらマウスで範囲選択し
      範囲選択部分にマウスを乗せて右クリックすると導入の項目で追加した外部コマンドメニューが
      表示されるので実行する
      実行する前に表作成の為の文字を本文欄に記入する必要がある（書式は下記参照）
      
    ・ワンポイントアドバイス
       V2Cでは表に変換した後、表を元の文字列に戻したい場合は「CTRL + Z 」キーを２回押すと戻せる
       （あるいは右クリックメニューの上部の「Undo addition」を２回実行する）

  ○V2Cの高度な導入方法
    ・スクリプトの導入…
      「tablemaker.js」をコピーした位置と同じスクリプトフォルダに同封の「tablemaker_menu.js」
      をコピーする
      スクリプトフォルダ内の「system」フォルダを開き、同封の「menu.js」をコピーする
      （フォルダがない場合は自分で作る）
      V2Cのメニュー「設定」→「外部コマンド」→スクリプト→「menu.js」の欄に「Frw」を追加する
        ※menu.jsにスクリプトからファイルの読込・書込を許可するパーミッションコード
          tablemaker_menu.js、tablemaker.jsのevalの為の読込み、表の変換設定を記憶するための
          スクリプトフォルダ内の「scdata]フォルダの「tablemaker.settings」の
          読込み・書込みをするために必要です。
      既にV2Cを起動している場合はメニュー「ファイル」→「再読み込み」で「menu.js」を選ぶか、
      V2Cを再起動する

    ・スクリプトの実行
      書き込みウィンドウを開いて表作成の文字を書くまでは上記と同じ、
      メニューを出すのに上記では文字を範囲選択する必要があったが範囲選択しない状態でも
      メニューが表示される用になる
      （範囲選択せずにそのまま実行すると本文全体が対象になるが関係ない部分はそのまま）
      また変換用の設定もそこから出来る

―┤表の書き方├――――――――――――――――――――――――――――――――――――――――――

  ○以下の書式にしたがって書いた文字列を選択範囲で囲って外部コマンドを実行する
    基本的にpukiwikiのテーブル作成の書式に似てる
    まず「|」で挟んで各セル（罫線で囲いたい文字のこと。以下、セル）を書く
    セルの数は全行同じ数にしないとだめ
    例…
      |項目１|項目２|項目３|項目４|
      |２行目|は|こんな|感じ|

  ○直下に水平線の挿入
    末尾に「b」を付ける、又は全てのセルの文字列の頭に「~」を付ける
    |直下に線を挿入する場合は|こんな|ふうに|やる|b
    |~全部|~うにょうにょを|~入れないと|~入らない|

  ○ヘッダー/フッダー行
    特別な行だと分かるように他の行より一段階太い線を直下（フッターなら直上）に挿入・置き換えする
    末尾に「h」又は「f」を付けるとヘッダー/フッダー行と見なす
    （「h」は1行目のみ有効(カラム行は行数に含まない)。「f」は最終行のみ有効）
    例…
      |項目１|項目２|項目３|項目４|h
      |項目１|項目２|項目３|項目４|
      |項目１|項目２|項目３|項目４|f

  ○セルの結合
    「~」又は「>」のみのセルを書くと上か右のセルと結合する
    ※罫線モード時のみ有効
    「~」は上のセルと結合。「>」は右のセルと結合。ようはpukiwikiの表っぽく書けるってこと
    セルの文字列に「~」[>」を１文字のみの項目を書きたい場合は「\~」「\>」こう書く
    例…
      |縦の結合|項目２|>|横の結合|
      |~|項目３|項目４|項目５|

    縦と横の複合して使用する場合右上のセルに文字を書いて他の部分を「>」と「~」で埋める
    例…
      |>|ここが基点|項目3|項目4|
      |~|~|項目3|項目５|

  ○改行
    セルの文字列の途中に「&br;」を入れると以降の文字が改行される
    ※罫線モード時のみ有効
    ※セル垂直結合時のみ表示される。それ以外で使うと&br;以降の文字は削除される
    例…
      |項目１&br;2行目です|項目２|項目３|項目４|
      |~|こんなふうにセル結合しないと|削除|される|

  ○スタイル指定行
    末尾に「c」を付けるとこの行以降の行の書式を変更する
    この行は表の出力に含まれずスタイルを変更したあと削除される
    ・文字寄せ方向指定書式…セルに以下の文字のいずれかを書く
    「LEFT:」文字を左寄せする
    「CENTER:」文字を中心に寄せる
    「RIGHT:」文字を右寄せする
    例…
      |CENTER:|LEFT:|RIGHT:|LEFT:|c
    通常のセルの文頭に方向指定書式を加えるとそのセルだけ寄せ方向を変更できる
    例…
      |項目１|項目２|項目３|項目４|
      |２行目|は|こんな|感じ|
      |CENTER:方向指定を|LEFT:直接|CENTER:セルに書くことも|RIGHT:できる|

―┤V2Cの外部コマンドの書式 ├―――――――――――――――――――――――――――――――――――

  【登録場所】選択テキスト、menu.js時は登録不要
  【ラベル】選択範囲を表に変換する
  【内容】選択範囲のpukiwikiライクな書式のテキストを罫線表に変換する 
  【コマンド】$SCRIPT tablemaker.js $TAILCUT
  【コマンド】[↑がオススメ。コピペも出来てコンパクト。テンプレ用途]
  【コマンド】$SCRIPT tablemaker.js $USE_UNICODE $STYLE(0) $TAILCUT
  【コマンド】$SCRIPT tablemaker.js $TAILCUT $STYLE(1)
  【コマンド】$SCRIPT tablemaker.js $USE_UNICODE $STYLE(41) $TAILCUT
  【コマンド】$SCRIPT tablemaker.js $SEPARATOR( | ) $STYLE(1)
  
  ○コマンドの書式
    $SCRIPT tablemaker.js 引数1 引数2 引数3 ... (半角スペースを開けて以下の引数を書く)

  ○引数一覧
    $PREVIEW      表を作成したあとプレビュー画面を開きます
                  メニュー「変換後にプレビューする」に相当

    $USE_UNICODE
                  指定するとユニコードの空白文字を使用して表を作成する
                  ※コピペするとズレる為テンプレ用途では指定しないほうが無難
                  幅調整用のドット等の文字が気になる場合に指定する
                  メニュー「ユニコード空白文字を使用する」に相当

    $SEPARATOR(区切り文字)
                  各セルを指定した区切り文字で区切る。(※ $STYLE(1)用の指定)
                  例…  $SEPARATOR(　|　)
                  メニュー「区切り文字列を変更する」に相当

    $USER_KEISEN(ユーザー指定罫線文字列)
                  スタイル「ユーザー指定罫線」で使用する罫線を指定する
                  メニュー「ユーザー指定の罫線を変更する」に相当
                  書式は最下部を参照

    $TAILCUT      表の各行の末尾の余分な文字を消す
                  各行の末尾のdot数を揃える場合は指定しない
                  dot数を揃えれば後ろに貼り付けやすくなるかも？
                  メニュー「行の末尾を揃える」に相当

    $STYLE(数字)  表の描画形式を指定する。指定できる数字は下記参照

―┤スタイル一覧├―――――――――――――――――――――――――――――――――――――――――

    $STYLE(0)     スタイル「位置揃えのみ」
                  罫線や区切り文字を使用せず表を作成する
                  (なるべくドット等のゴミが出ないように最適化してある)

    $STYLE(1)     スタイル「区切り文字」
                  区切り文字を使用して表を作成する

    $STYLE(21)    スタイル「半角文字の罫線」
                  「|----|」または「+----+ (USE_UNICODE時)」な罫線を
                  内枠・外枠に使用して表を作成する（$STYLE(2) とも書ける）

    $STYLE(31)    スタイル「細い罫線」
                  「┼─┼」な罫線を内枠・外枠に使用して表を作成する（$STYLE(3) とも書ける）

    $STYLE(41)    スタイル「ヘッダー行が太い罫線」
                  「╋━╋」な罫線を外枠とヘッダー及びフッター行にのみ使用して表を作成する
                  （$STYLE(4) とも書ける）

    $STYLE(51)    スタイル「太い罫線」
                  「╋━╋」な罫線を内枠・外枠に使用して表を作成する（$STYLE(5) だとこれ）

    $STYLE(91)    スタイル「ユーザー指定罫線」
                  罫線の文字種類を変更して内枠・外枠に使用して表を作成する
                  書式に関しては下記参照（$STYLE(9)だとこれ）

    $STYLE(20)    スタイル「半角文字の罫線（内枠のみ）」
                  「|----|」または「+----+ (USE_UNICODE時)」な罫線を
                  内枠にのみ使用して表を作成する

    $STYLE(30)    スタイル「細い罫線（内枠のみ）」
                  「┼─┼」な罫線を内枠にのみ使用して表を作成する

    $STYLE(40)    スタイル「ヘッダー行が太い罫線（内枠のみ）」
                  「╋━╋」な罫線をヘッダー及びフッター行にのみ使用して
                  通常は内枠のみの表を作成する

    $STYLE(50)    スタイル「太い罫線（内枠のみ）」
                  「╋━╋」な罫線を内枠にのみ使用して表を作成する

    $STYLE(90)    スタイル「ユーザー指定罫線（内枠のみ）」
                  罫線の文字種類を変更して内枠にのみ使用して表を作成する
                  書式に関しては下記参照

    $STYLE(22)    スタイル「半角文字の罫線（横線なし）」
                  「|----|」または「+----+ (USE_UNICODE時)」な罫線を外枠と
                   ヘッダーフッター行のみ水平罫線を使用して表を作成する

    $STYLE(32)    スタイル「細い罫線（横線なし）」
                  「┼─┼」な罫線を外枠とヘッダーフッター行のみ水平罫線を使用して表を作成する

    $STYLE(42)    スタイル「ヘッダー行が太い罫線（横線なし）」
                  「╋━╋」な罫線を外枠とヘッダーフッター行のみ水平罫線を使用して表を作成する

    $STYLE(52)    スタイル「太い罫線（横線なし）」
                  「╋━╋」な罫線を外枠とヘッダーフッター行のみ水平罫線を使用して表を作成する

    $STYLE(92)    スタイル「ユーザー指定罫線（横線なし）」
                  罫線の文字種類を変更して外枠とヘッダーフッター行のみ水平罫線を使用して表を作成する
                  書式に関しては下記参照

―┤ユーザー指定罫線について├―――――――――――――――――――――――――――――――――――

  ○各罫線文字種を&br;で区切って再設定する
    全ての文字種が１文字でいい場合は&br;を使わずにずらっと並べて書いても設定可能
    文字の並べる順番は必ず以下の順番で
    ┌┬┐─├┼┤│└┴┘┏┳┓━┣╋┫┃┗┻┛┠╂┨┰┸┝┿┥┯┷
    個数の帳尻が合わないとエラーになるので慎重に設定すること
    また各罫線文字種は必ずしも単一の文字である必要はなくいくらでも文字を記入可能
    ユニコード文字を使用する場合は数値文字参照を使用する（&#12345;のような）
    コツとしては全ての文字種のdot数を合わせるとズレなく表を作成できる

  ○再設定の例
+&br;+&br;+&br;-&br;+&br;+&br;+&br;&#8201;|&#8201;&br;+&br;+&br;+&br;+&br;+&br;+&br;-&br;+&br;+&br;+&br;&#8201;|&#8201;&br;+&br;+&br;+&br;+&br;+&br;+&br;+&br;+&br;+&br;+&br;+&br;+&br;+
***-**********-*****************

  ○一度設定すると元に戻せないので既定のユーザー指定文字列に戻す場合は以下の文字列を設定する
┌&br;┬&br;┐&br;─&br;├&br;┼&br;┤&br;│&br;└&br;┴&br;┘&br;┏&br;┳&br;┓&br;━&br;┣&br;╋&br;┫&br;┃&br;┗&br;┻&br;┛&br;┠&br;╂&br;┨&br;┰&br;┸&br;┝&br;┿&br;┥&br;┯&br;┷
    あるいは以下でも可
┌┬┐─├┼┤│└┴┘┏┳┓━┣╋┫┃┗┻┛┠╂┨┰┸┝┿┥┯┷

―┤謝辞├―――――――――――――――――――――――――――――――――――――――――――――

  ○Fantasioso Acsii Art ( http://www.geocities.jp/file_file_file_aaa/guide/glinedot.html )
    Shift_JIS文字のdot数にはこちらのサイトの情報を参考にさせてもらいました

 *-----------------------------------------------EOF------------------------------------------------*
